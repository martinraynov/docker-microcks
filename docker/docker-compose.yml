networks:
  default:
    external: true
    name: lb-common
  microcks:
    external: false
    name: microcks

services:
  mariadb:
    image: mariadb:12.0
    container_name: microcks-mariadb
    networks:
      - default
      - microcks
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.mariadb.entrypoints=db"
      - "traefik.tcp.routers.mariadb.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mariadb.service=svc_mariadb"
      - "traefik.tcp.services.svc_mariadb.loadbalancer.server.port=3306"
    command: --bind-address=0.0.0.0  # Allow external connections
    environment:
      MARIADB_USER: admin
      MARIADB_PASSWORD: admin
      MARIADB_DATABASE: keycloak
      MARIADB_ROOT_PASSWORD: admin
    volumes:
      - "./data/mariadb:/var/lib/mysql"
      # - "./config/microcks-mariadb.cnf:/etc/mysql/mariadb.conf.d/50-server.cnf:ro"
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized"]
      interval: 3s
      timeout: 3s
      retries: 20

  mongo:
    image: mongo:3.6.23
    container_name: microcks-mongodb
    networks:
      - microcks
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.mongodb.entrypoints=db"
      - "traefik.tcp.routers.mongodb.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mongodb.service=svc_mongodb"
      - "traefik.tcp.services.mongodb.loadbalancer.server.port=27017"
    volumes:
      - "./data/mongodb/mongodb:/data/mongodb"
      - "./data/mongodb/configdb:/data/configdb"
      - "./data/mongodb/db:/data/db"
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 1s
      retries: 3

  keycloak:
    depends_on:
      mariadb:
        condition: service_healthy
    image: quay.io/keycloak/keycloak:26.0
    container_name: microcks-sso
    networks:
      default : 
      microcks : 
        aliases:
          - microcks-kc.local.io
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloack.entrypoints=web"
      - "traefik.http.routers.keycloack.rule=Host(`microcks-kc.local.io`)"
      - "traefik.http.routers.keycloack.service=svc_keycloack"
      - "traefik.http.services.svc_keycloack.loadbalancer.server.port=8080"
    environment:
      KC_DB: mariadb
      KC_DB_URL: jdbc:mariadb://mariadb:3306/keycloak?characterEncoding=UTF-8
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KC_BOOTSTRAP_ADMIN_USERNAME: "admin"
      KC_BOOTSTRAP_ADMIN_PASSWORD: "admin"
      KC_HOSTNAME_ADMIN_URL: "http://microcks-kc.local.io"
      KC_HOSTNAME_URL: "http://microcks-kc.local.io"
      KC_LOG_LEVEL: info
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_LOG_CONSOLE_LEVEL: debug
    volumes:
      - "./keycloak-realm/microcks-realm-sample.json:/opt/keycloak/data/import/microcks-realm.json"
      - "./keycloak-theme/mraynov:/opt/keycloak/themes/mraynov"
    command: start-dev --import-realm
    healthcheck:
      test: ["CMD", "sh", "-c", "echo -e 'GET /health/live HTTP/1.1\r\nHost: localhost\r\n\r\n' > /dev/tcp/localhost/9000"]
      start_period: 10s
      interval: 10s
      timeout: 2s
      retries: 3

  postman:
    image: quay.io/microcks/microcks-postman-runtime:latest
    container_name: microcks-postman-runtime
    networks:
      - microcks
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      start_period: 5s
      interval: 20s
      timeout: 3s
      retries: 3

  app:
    depends_on:
      - mongo
      - keycloak
      - postman
    image: quay.io/microcks/microcks:1.10.1
    container_name: microcks
    networks:
      - default
      - microcks
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.microcks.entrypoints=web"
      - "traefik.http.routers.microcks.rule=Host(`microcks.local.io`)"
      - "traefik.http.routers.microcks.service=svc_microcks"
      - "traefik.http.services.svc_microcks.loadbalancer.server.port=8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017
      - SPRING_DATA_MONGODB_DATABASE=microcks
      - POSTMAN_RUNNER_URL=http://postman:3000
      - TEST_CALLBACK_URL=http://microcks.local.io
      - SERVICES_UPDATE_INTERVAL=0 0 0/2 * * *
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_PUBLIC_URL=http://microcks-kc.local.io
      - JAVA_OPTIONS=-Dspring.security.oauth2.resourceserver.jwt.issuer-uri=http://microcks-kc.local.io/realms/microcks -Dspring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8080/realms/microcks/protocol/openid-connect/certs
      #- MAX_UPLOAD_FILE_SIZE=3MB
    volumes:
      - "./config:/deployments/config"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      start_period: 35s
      interval: 10s
      timeout: 3s
      retries: 3
    # develop:
    #   watch:
    #     - action: sync+restart
    #       path: ./config
    #       target: /deployments/config
